/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Validator, ValidatorEntry } from "./validators";
import { User } from "./components/radh-user/model";
export namespace Components {
    interface CjsChild {
        "messageFromFather": string;
        "setPaga": (money: number) => Promise<void>;
    }
    interface IndexPage {
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface RadhAuth {
    }
    interface RadhAutocomplete {
        "closeOptions": () => Promise<void>;
        "isAsync": boolean;
        "items": string;
        "label": string;
        "labelBy": string;
    }
    interface RadhButton {
    }
    interface RadhCard {
    }
    interface RadhCardImage {
        "alt": string;
        "src": string;
    }
    interface RadhColorPicker {
        "defaultValue": string;
        "resettable": boolean;
    }
    interface RadhCounter {
    }
    interface RadhD3 {
    }
    interface RadhFluidGrid {
    }
    interface RadhFormLogin {
    }
    interface RadhGithubSearchUser {
    }
    interface RadhGithubSearchUserWidget {
    }
    interface RadhGitlabUsers {
    }
    interface RadhGrid {
    }
    interface RadhHello {
        "loadLocale": () => Promise<void>;
        "name": string;
    }
    interface RadhHoly {
    }
    interface RadhInput {
        "validator": Array<string | ValidatorEntry | Validator<string>>;
        "value": string;
    }
    interface RadhInputText {
        "label": string;
        "name": string;
        "value": string;
    }
    interface RadhIonToast {
    }
    interface RadhLayoutCenter {
    }
    interface RadhLazyImg {
        "imgSrc": string;
        "time": number;
    }
    interface RadhLocaleSelect {
        "locales": string;
    }
    interface RadhModal {
        "heading": string;
        "visible": boolean;
    }
    interface RadhNav {
    }
    interface RadhPageContainer {
    }
    interface RadhSeparator {
        "color": string;
        "height": string;
    }
    interface RadhSwappyRadios {
        "getSelectedRadio": () => Promise<number>;
        "labelRadios": string;
        "nameRadios": string;
        "optionsRadios": string[];
    }
    interface RadhToast {
        "launchToast": (desc: string) => Promise<void>;
    }
    interface RadhUrlCode {
    }
    interface RadhUser {
        "avatar": boolean;
        "setUser": (user: User) => Promise<void>;
        "user": string;
    }
    interface RadhVersion {
    }
    interface WsCheckButton {
        /**
          * Id input checkbox
         */
        "idCheck": string;
        /**
          * Value input checkbox
         */
        "isChecked": boolean;
        /**
          * Name input checkbox
         */
        "nameCheck": string;
        /**
          * Text label
         */
        "text": string;
    }
    interface WsLayoutHoly {
    }
}
declare global {
    interface HTMLCjsChildElement extends Components.CjsChild, HTMLStencilElement {
    }
    var HTMLCjsChildElement: {
        prototype: HTMLCjsChildElement;
        new (): HTMLCjsChildElement;
    };
    interface HTMLIndexPageElement extends Components.IndexPage, HTMLStencilElement {
    }
    var HTMLIndexPageElement: {
        prototype: HTMLIndexPageElement;
        new (): HTMLIndexPageElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLRadhAuthElement extends Components.RadhAuth, HTMLStencilElement {
    }
    var HTMLRadhAuthElement: {
        prototype: HTMLRadhAuthElement;
        new (): HTMLRadhAuthElement;
    };
    interface HTMLRadhAutocompleteElement extends Components.RadhAutocomplete, HTMLStencilElement {
    }
    var HTMLRadhAutocompleteElement: {
        prototype: HTMLRadhAutocompleteElement;
        new (): HTMLRadhAutocompleteElement;
    };
    interface HTMLRadhButtonElement extends Components.RadhButton, HTMLStencilElement {
    }
    var HTMLRadhButtonElement: {
        prototype: HTMLRadhButtonElement;
        new (): HTMLRadhButtonElement;
    };
    interface HTMLRadhCardElement extends Components.RadhCard, HTMLStencilElement {
    }
    var HTMLRadhCardElement: {
        prototype: HTMLRadhCardElement;
        new (): HTMLRadhCardElement;
    };
    interface HTMLRadhCardImageElement extends Components.RadhCardImage, HTMLStencilElement {
    }
    var HTMLRadhCardImageElement: {
        prototype: HTMLRadhCardImageElement;
        new (): HTMLRadhCardImageElement;
    };
    interface HTMLRadhColorPickerElement extends Components.RadhColorPicker, HTMLStencilElement {
    }
    var HTMLRadhColorPickerElement: {
        prototype: HTMLRadhColorPickerElement;
        new (): HTMLRadhColorPickerElement;
    };
    interface HTMLRadhCounterElement extends Components.RadhCounter, HTMLStencilElement {
    }
    var HTMLRadhCounterElement: {
        prototype: HTMLRadhCounterElement;
        new (): HTMLRadhCounterElement;
    };
    interface HTMLRadhD3Element extends Components.RadhD3, HTMLStencilElement {
    }
    var HTMLRadhD3Element: {
        prototype: HTMLRadhD3Element;
        new (): HTMLRadhD3Element;
    };
    interface HTMLRadhFluidGridElement extends Components.RadhFluidGrid, HTMLStencilElement {
    }
    var HTMLRadhFluidGridElement: {
        prototype: HTMLRadhFluidGridElement;
        new (): HTMLRadhFluidGridElement;
    };
    interface HTMLRadhFormLoginElement extends Components.RadhFormLogin, HTMLStencilElement {
    }
    var HTMLRadhFormLoginElement: {
        prototype: HTMLRadhFormLoginElement;
        new (): HTMLRadhFormLoginElement;
    };
    interface HTMLRadhGithubSearchUserElement extends Components.RadhGithubSearchUser, HTMLStencilElement {
    }
    var HTMLRadhGithubSearchUserElement: {
        prototype: HTMLRadhGithubSearchUserElement;
        new (): HTMLRadhGithubSearchUserElement;
    };
    interface HTMLRadhGithubSearchUserWidgetElement extends Components.RadhGithubSearchUserWidget, HTMLStencilElement {
    }
    var HTMLRadhGithubSearchUserWidgetElement: {
        prototype: HTMLRadhGithubSearchUserWidgetElement;
        new (): HTMLRadhGithubSearchUserWidgetElement;
    };
    interface HTMLRadhGitlabUsersElement extends Components.RadhGitlabUsers, HTMLStencilElement {
    }
    var HTMLRadhGitlabUsersElement: {
        prototype: HTMLRadhGitlabUsersElement;
        new (): HTMLRadhGitlabUsersElement;
    };
    interface HTMLRadhGridElement extends Components.RadhGrid, HTMLStencilElement {
    }
    var HTMLRadhGridElement: {
        prototype: HTMLRadhGridElement;
        new (): HTMLRadhGridElement;
    };
    interface HTMLRadhHelloElement extends Components.RadhHello, HTMLStencilElement {
    }
    var HTMLRadhHelloElement: {
        prototype: HTMLRadhHelloElement;
        new (): HTMLRadhHelloElement;
    };
    interface HTMLRadhHolyElement extends Components.RadhHoly, HTMLStencilElement {
    }
    var HTMLRadhHolyElement: {
        prototype: HTMLRadhHolyElement;
        new (): HTMLRadhHolyElement;
    };
    interface HTMLRadhInputElement extends Components.RadhInput, HTMLStencilElement {
    }
    var HTMLRadhInputElement: {
        prototype: HTMLRadhInputElement;
        new (): HTMLRadhInputElement;
    };
    interface HTMLRadhInputTextElement extends Components.RadhInputText, HTMLStencilElement {
    }
    var HTMLRadhInputTextElement: {
        prototype: HTMLRadhInputTextElement;
        new (): HTMLRadhInputTextElement;
    };
    interface HTMLRadhIonToastElement extends Components.RadhIonToast, HTMLStencilElement {
    }
    var HTMLRadhIonToastElement: {
        prototype: HTMLRadhIonToastElement;
        new (): HTMLRadhIonToastElement;
    };
    interface HTMLRadhLayoutCenterElement extends Components.RadhLayoutCenter, HTMLStencilElement {
    }
    var HTMLRadhLayoutCenterElement: {
        prototype: HTMLRadhLayoutCenterElement;
        new (): HTMLRadhLayoutCenterElement;
    };
    interface HTMLRadhLazyImgElement extends Components.RadhLazyImg, HTMLStencilElement {
    }
    var HTMLRadhLazyImgElement: {
        prototype: HTMLRadhLazyImgElement;
        new (): HTMLRadhLazyImgElement;
    };
    interface HTMLRadhLocaleSelectElement extends Components.RadhLocaleSelect, HTMLStencilElement {
    }
    var HTMLRadhLocaleSelectElement: {
        prototype: HTMLRadhLocaleSelectElement;
        new (): HTMLRadhLocaleSelectElement;
    };
    interface HTMLRadhModalElement extends Components.RadhModal, HTMLStencilElement {
    }
    var HTMLRadhModalElement: {
        prototype: HTMLRadhModalElement;
        new (): HTMLRadhModalElement;
    };
    interface HTMLRadhNavElement extends Components.RadhNav, HTMLStencilElement {
    }
    var HTMLRadhNavElement: {
        prototype: HTMLRadhNavElement;
        new (): HTMLRadhNavElement;
    };
    interface HTMLRadhPageContainerElement extends Components.RadhPageContainer, HTMLStencilElement {
    }
    var HTMLRadhPageContainerElement: {
        prototype: HTMLRadhPageContainerElement;
        new (): HTMLRadhPageContainerElement;
    };
    interface HTMLRadhSeparatorElement extends Components.RadhSeparator, HTMLStencilElement {
    }
    var HTMLRadhSeparatorElement: {
        prototype: HTMLRadhSeparatorElement;
        new (): HTMLRadhSeparatorElement;
    };
    interface HTMLRadhSwappyRadiosElement extends Components.RadhSwappyRadios, HTMLStencilElement {
    }
    var HTMLRadhSwappyRadiosElement: {
        prototype: HTMLRadhSwappyRadiosElement;
        new (): HTMLRadhSwappyRadiosElement;
    };
    interface HTMLRadhToastElement extends Components.RadhToast, HTMLStencilElement {
    }
    var HTMLRadhToastElement: {
        prototype: HTMLRadhToastElement;
        new (): HTMLRadhToastElement;
    };
    interface HTMLRadhUrlCodeElement extends Components.RadhUrlCode, HTMLStencilElement {
    }
    var HTMLRadhUrlCodeElement: {
        prototype: HTMLRadhUrlCodeElement;
        new (): HTMLRadhUrlCodeElement;
    };
    interface HTMLRadhUserElement extends Components.RadhUser, HTMLStencilElement {
    }
    var HTMLRadhUserElement: {
        prototype: HTMLRadhUserElement;
        new (): HTMLRadhUserElement;
    };
    interface HTMLRadhVersionElement extends Components.RadhVersion, HTMLStencilElement {
    }
    var HTMLRadhVersionElement: {
        prototype: HTMLRadhVersionElement;
        new (): HTMLRadhVersionElement;
    };
    interface HTMLWsCheckButtonElement extends Components.WsCheckButton, HTMLStencilElement {
    }
    var HTMLWsCheckButtonElement: {
        prototype: HTMLWsCheckButtonElement;
        new (): HTMLWsCheckButtonElement;
    };
    interface HTMLWsLayoutHolyElement extends Components.WsLayoutHoly, HTMLStencilElement {
    }
    var HTMLWsLayoutHolyElement: {
        prototype: HTMLWsLayoutHolyElement;
        new (): HTMLWsLayoutHolyElement;
    };
    interface HTMLElementTagNameMap {
        "cjs-child": HTMLCjsChildElement;
        "index-page": HTMLIndexPageElement;
        "my-component": HTMLMyComponentElement;
        "radh-auth": HTMLRadhAuthElement;
        "radh-autocomplete": HTMLRadhAutocompleteElement;
        "radh-button": HTMLRadhButtonElement;
        "radh-card": HTMLRadhCardElement;
        "radh-card-image": HTMLRadhCardImageElement;
        "radh-color-picker": HTMLRadhColorPickerElement;
        "radh-counter": HTMLRadhCounterElement;
        "radh-d3": HTMLRadhD3Element;
        "radh-fluid-grid": HTMLRadhFluidGridElement;
        "radh-form-login": HTMLRadhFormLoginElement;
        "radh-github-search-user": HTMLRadhGithubSearchUserElement;
        "radh-github-search-user-widget": HTMLRadhGithubSearchUserWidgetElement;
        "radh-gitlab-users": HTMLRadhGitlabUsersElement;
        "radh-grid": HTMLRadhGridElement;
        "radh-hello": HTMLRadhHelloElement;
        "radh-holy": HTMLRadhHolyElement;
        "radh-input": HTMLRadhInputElement;
        "radh-input-text": HTMLRadhInputTextElement;
        "radh-ion-toast": HTMLRadhIonToastElement;
        "radh-layout-center": HTMLRadhLayoutCenterElement;
        "radh-lazy-img": HTMLRadhLazyImgElement;
        "radh-locale-select": HTMLRadhLocaleSelectElement;
        "radh-modal": HTMLRadhModalElement;
        "radh-nav": HTMLRadhNavElement;
        "radh-page-container": HTMLRadhPageContainerElement;
        "radh-separator": HTMLRadhSeparatorElement;
        "radh-swappy-radios": HTMLRadhSwappyRadiosElement;
        "radh-toast": HTMLRadhToastElement;
        "radh-url-code": HTMLRadhUrlCodeElement;
        "radh-user": HTMLRadhUserElement;
        "radh-version": HTMLRadhVersionElement;
        "ws-check-button": HTMLWsCheckButtonElement;
        "ws-layout-holy": HTMLWsLayoutHolyElement;
    }
}
declare namespace LocalJSX {
    interface CjsChild {
        "messageFromFather"?: string;
        "onReply"?: (event: CustomEvent<any>) => void;
    }
    interface IndexPage {
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface RadhAuth {
        "onUserInfo"?: (event: CustomEvent<any>) => void;
    }
    interface RadhAutocomplete {
        "isAsync"?: boolean;
        "items"?: string;
        "label"?: string;
        "labelBy"?: string;
        "onValueSelected"?: (event: CustomEvent<any>) => void;
    }
    interface RadhButton {
    }
    interface RadhCard {
    }
    interface RadhCardImage {
        "alt"?: string;
        "src"?: string;
    }
    interface RadhColorPicker {
        "defaultValue"?: string;
        "onColorChanged"?: (event: CustomEvent<any>) => void;
        "resettable"?: boolean;
    }
    interface RadhCounter {
    }
    interface RadhD3 {
    }
    interface RadhFluidGrid {
    }
    interface RadhFormLogin {
    }
    interface RadhGithubSearchUser {
        "onUserSearched"?: (event: CustomEvent<any>) => void;
    }
    interface RadhGithubSearchUserWidget {
        "onUserSearched"?: (event: CustomEvent<any>) => void;
    }
    interface RadhGitlabUsers {
        "onToasted"?: (event: CustomEvent<any>) => void;
    }
    interface RadhGrid {
    }
    interface RadhHello {
        "name"?: string;
        "onSelected"?: (event: CustomEvent<any>) => void;
    }
    interface RadhHoly {
    }
    interface RadhInput {
        "onChanged"?: (event: CustomEvent<string>) => void;
        "validator"?: Array<string | ValidatorEntry | Validator<string>>;
        "value"?: string;
    }
    interface RadhInputText {
        "label"?: string;
        "name"?: string;
        "onChanged"?: (event: CustomEvent<string>) => void;
        "value"?: string;
    }
    interface RadhIonToast {
    }
    interface RadhLayoutCenter {
    }
    interface RadhLazyImg {
        "imgSrc"?: string;
        "time"?: number;
    }
    interface RadhLocaleSelect {
        "locales"?: string;
        "onSendLocale"?: (event: CustomEvent<any>) => void;
    }
    interface RadhModal {
        "heading"?: string;
        "onCancel"?: (event: CustomEvent<any>) => void;
        "onOk"?: (event: CustomEvent<any>) => void;
        "visible"?: boolean;
    }
    interface RadhNav {
    }
    interface RadhPageContainer {
    }
    interface RadhSeparator {
        "color"?: string;
        "height"?: string;
    }
    interface RadhSwappyRadios {
        "labelRadios"?: string;
        "nameRadios"?: string;
        "onSelectedOption"?: (event: CustomEvent<any>) => void;
        "optionsRadios"?: string[];
    }
    interface RadhToast {
    }
    interface RadhUrlCode {
    }
    interface RadhUser {
        "avatar"?: boolean;
        "onSelected"?: (event: CustomEvent<any>) => void;
        "user"?: string;
    }
    interface RadhVersion {
    }
    interface WsCheckButton {
        /**
          * Id input checkbox
         */
        "idCheck"?: string;
        /**
          * Value input checkbox
         */
        "isChecked"?: boolean;
        /**
          * Name input checkbox
         */
        "nameCheck"?: string;
        /**
          * Fire outside value input checkbox
         */
        "onCheckedChange"?: (event: CustomEvent<any>) => void;
        /**
          * Text label
         */
        "text"?: string;
    }
    interface WsLayoutHoly {
    }
    interface IntrinsicElements {
        "cjs-child": CjsChild;
        "index-page": IndexPage;
        "my-component": MyComponent;
        "radh-auth": RadhAuth;
        "radh-autocomplete": RadhAutocomplete;
        "radh-button": RadhButton;
        "radh-card": RadhCard;
        "radh-card-image": RadhCardImage;
        "radh-color-picker": RadhColorPicker;
        "radh-counter": RadhCounter;
        "radh-d3": RadhD3;
        "radh-fluid-grid": RadhFluidGrid;
        "radh-form-login": RadhFormLogin;
        "radh-github-search-user": RadhGithubSearchUser;
        "radh-github-search-user-widget": RadhGithubSearchUserWidget;
        "radh-gitlab-users": RadhGitlabUsers;
        "radh-grid": RadhGrid;
        "radh-hello": RadhHello;
        "radh-holy": RadhHoly;
        "radh-input": RadhInput;
        "radh-input-text": RadhInputText;
        "radh-ion-toast": RadhIonToast;
        "radh-layout-center": RadhLayoutCenter;
        "radh-lazy-img": RadhLazyImg;
        "radh-locale-select": RadhLocaleSelect;
        "radh-modal": RadhModal;
        "radh-nav": RadhNav;
        "radh-page-container": RadhPageContainer;
        "radh-separator": RadhSeparator;
        "radh-swappy-radios": RadhSwappyRadios;
        "radh-toast": RadhToast;
        "radh-url-code": RadhUrlCode;
        "radh-user": RadhUser;
        "radh-version": RadhVersion;
        "ws-check-button": WsCheckButton;
        "ws-layout-holy": WsLayoutHoly;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "cjs-child": LocalJSX.CjsChild & JSXBase.HTMLAttributes<HTMLCjsChildElement>;
            "index-page": LocalJSX.IndexPage & JSXBase.HTMLAttributes<HTMLIndexPageElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "radh-auth": LocalJSX.RadhAuth & JSXBase.HTMLAttributes<HTMLRadhAuthElement>;
            "radh-autocomplete": LocalJSX.RadhAutocomplete & JSXBase.HTMLAttributes<HTMLRadhAutocompleteElement>;
            "radh-button": LocalJSX.RadhButton & JSXBase.HTMLAttributes<HTMLRadhButtonElement>;
            "radh-card": LocalJSX.RadhCard & JSXBase.HTMLAttributes<HTMLRadhCardElement>;
            "radh-card-image": LocalJSX.RadhCardImage & JSXBase.HTMLAttributes<HTMLRadhCardImageElement>;
            "radh-color-picker": LocalJSX.RadhColorPicker & JSXBase.HTMLAttributes<HTMLRadhColorPickerElement>;
            "radh-counter": LocalJSX.RadhCounter & JSXBase.HTMLAttributes<HTMLRadhCounterElement>;
            "radh-d3": LocalJSX.RadhD3 & JSXBase.HTMLAttributes<HTMLRadhD3Element>;
            "radh-fluid-grid": LocalJSX.RadhFluidGrid & JSXBase.HTMLAttributes<HTMLRadhFluidGridElement>;
            "radh-form-login": LocalJSX.RadhFormLogin & JSXBase.HTMLAttributes<HTMLRadhFormLoginElement>;
            "radh-github-search-user": LocalJSX.RadhGithubSearchUser & JSXBase.HTMLAttributes<HTMLRadhGithubSearchUserElement>;
            "radh-github-search-user-widget": LocalJSX.RadhGithubSearchUserWidget & JSXBase.HTMLAttributes<HTMLRadhGithubSearchUserWidgetElement>;
            "radh-gitlab-users": LocalJSX.RadhGitlabUsers & JSXBase.HTMLAttributes<HTMLRadhGitlabUsersElement>;
            "radh-grid": LocalJSX.RadhGrid & JSXBase.HTMLAttributes<HTMLRadhGridElement>;
            "radh-hello": LocalJSX.RadhHello & JSXBase.HTMLAttributes<HTMLRadhHelloElement>;
            "radh-holy": LocalJSX.RadhHoly & JSXBase.HTMLAttributes<HTMLRadhHolyElement>;
            "radh-input": LocalJSX.RadhInput & JSXBase.HTMLAttributes<HTMLRadhInputElement>;
            "radh-input-text": LocalJSX.RadhInputText & JSXBase.HTMLAttributes<HTMLRadhInputTextElement>;
            "radh-ion-toast": LocalJSX.RadhIonToast & JSXBase.HTMLAttributes<HTMLRadhIonToastElement>;
            "radh-layout-center": LocalJSX.RadhLayoutCenter & JSXBase.HTMLAttributes<HTMLRadhLayoutCenterElement>;
            "radh-lazy-img": LocalJSX.RadhLazyImg & JSXBase.HTMLAttributes<HTMLRadhLazyImgElement>;
            "radh-locale-select": LocalJSX.RadhLocaleSelect & JSXBase.HTMLAttributes<HTMLRadhLocaleSelectElement>;
            "radh-modal": LocalJSX.RadhModal & JSXBase.HTMLAttributes<HTMLRadhModalElement>;
            "radh-nav": LocalJSX.RadhNav & JSXBase.HTMLAttributes<HTMLRadhNavElement>;
            "radh-page-container": LocalJSX.RadhPageContainer & JSXBase.HTMLAttributes<HTMLRadhPageContainerElement>;
            "radh-separator": LocalJSX.RadhSeparator & JSXBase.HTMLAttributes<HTMLRadhSeparatorElement>;
            "radh-swappy-radios": LocalJSX.RadhSwappyRadios & JSXBase.HTMLAttributes<HTMLRadhSwappyRadiosElement>;
            "radh-toast": LocalJSX.RadhToast & JSXBase.HTMLAttributes<HTMLRadhToastElement>;
            "radh-url-code": LocalJSX.RadhUrlCode & JSXBase.HTMLAttributes<HTMLRadhUrlCodeElement>;
            "radh-user": LocalJSX.RadhUser & JSXBase.HTMLAttributes<HTMLRadhUserElement>;
            "radh-version": LocalJSX.RadhVersion & JSXBase.HTMLAttributes<HTMLRadhVersionElement>;
            "ws-check-button": LocalJSX.WsCheckButton & JSXBase.HTMLAttributes<HTMLWsCheckButtonElement>;
            "ws-layout-holy": LocalJSX.WsLayoutHoly & JSXBase.HTMLAttributes<HTMLWsLayoutHolyElement>;
        }
    }
}
